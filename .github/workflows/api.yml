name: Api

on:
  push:
    paths:
      - 'api/**'
      - 'buildSrc/**'
      - 'gradle/**'
      - '.github/workflows/api.yml'
    branches: [ master ]
    tags-ignore:
      - '*.*'
  pull_request:
    paths:
      - 'api/**'
    types: [ opened, synchronize, reopened ]

jobs:
  build:
    name: Build for JDK ${{ matrix.java }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java: [ 19 ]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: ${{ matrix.java }}

      - name: Build
        run: ./gradlew api:clean api:build

      - name: Run tests
        run: ./gradlew api:test

  publish:
    name: Publish artifacts
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    needs: build

    strategy:
      matrix:
        java: [ 19 ]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to ECR
        id: login_ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build image and push to ECR
        env:
          ECR_REGISTRY: ${{ steps.login_ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: ./gradlew api:jib -Djib.to.credHelper=ecr-login -Djib.to.image=$ECR_REGISTRY/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG

#  deploy:
#    name: Deploy to EKS
#    runs-on: ubuntu-latest
#    if: github.event_name != 'pull_request'
#    needs: publish
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3

